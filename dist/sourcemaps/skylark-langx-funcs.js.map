{"version":3,"sources":["skylark-langx-funcs.js"],"names":["define","skylark","types","objects","mixin","slice","Array","prototype","isFunction","isString","proxy","fn","context","args","arguments","call","apply","concat","unshift","TypeError","delegate","TMP","obj","props","tmp","templateSettings","evaluate","interpolate","escape","attach","bind","debounce","wait","timeout","this","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","predicate","noop","returnTrue","returnFalse","template","text","settings","oldSettings","defaults","render","matcher","RegExp","noMatch","source","join","index","replace","match","offset","escapeRegExp","escapeChar","length","variable","Function","e","data","_","argument","funcs","main"],"mappings":";;;;;;;g4BAAAA,EAAA,6BACA,sBACA,sBACA,yBACA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAC,MACAC,EAAAC,MAAAC,UAAAF,MACAG,EAAAN,EAAAM,WACAC,EAAAP,EAAAO,SAcA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,KAAAC,WAAAT,EAAAU,KAAAD,UAAA,GACA,GAAAN,EAAAG,GAAA,CAIA,OAHA,WACA,OAAAA,EAAAK,MAAAJ,EAAAC,EAAAA,EAAAI,OAAAZ,EAAAU,KAAAD,YAAAA,YAGA,GAAAL,EAAAG,GACA,OAAAC,GACAA,EAAAK,QAAAP,EAAAC,GAAAD,GACAD,EAAAM,MAAA,KAAAH,IAEAH,EAAAC,EAAAC,GAAAD,GAGA,MAAA,IAAAQ,UAAA,qBAiBA,IAAAC,EAAA,WAEA,SAAAC,KACA,OAAA,SAAAC,EAAAC,GACAF,EAAAd,UAAAe,EACA,IAAAE,EAAA,IAAAH,EAKA,OAJAA,EAAAd,UAAA,KACAgB,GACAnB,EAAAoB,EAAAD,GAEAC,GAVA,GAcAC,GACAC,SAAA,kBACAC,YAAA,mBACAC,OAAA,oBAOA,OAAA3B,EAAA4B,OAAA,eACAC,KAAApB,EAEAqB,SAxCA,SAAApB,EAAAqB,GACA,IAAAC,EACA,OAAA,WACA,IAAArB,EAAAsB,KAAArB,EAAAC,UAKAmB,GAAAE,aAAAF,GACAA,EAAAG,WALA,WACAH,EAAA,KACAtB,EAAAK,MAAAJ,EAAAC,IAGAmB,KAiCAZ,SAAAA,EAEAiB,MA3EA,SAAA1B,GACA2B,sBACAA,sBAAA3B,GAEA4B,cAAA5B,GAEA,OAAAuB,MAuEAM,OAnBA,SAAAC,GACA,GAAA,mBAAAA,EACA,MAAA,IAAAtB,UAAA,uBAEA,OAAA,YAAAN,GACA,OAAA4B,EAAAzB,MAAAkB,KAAArB,KAgBA6B,KAtEA,aAwEAhC,MAAAA,EAEAiC,WAAA,WACA,OAAA,GAGAC,YAAA,WACA,OAAA,GAGAnB,iBAAAA,EACAoB,SA3BA,SAAAC,EAAAC,EAAAC,IACAD,GAAAC,IAAAD,EAAAC,GACAD,EAAA5C,EAAA8C,YAAAF,EAAAtB,GAGA,IAhDAyB,EAgDAC,EAAAC,SAhFAL,EAAAnB,QAAAyB,SAAAC,QACAP,EAAApB,aAAA0B,SAAAC,QACAP,EAAArB,UAAA2B,SAAAC,QACAC,KAAA,KAAA,KAAA,KAGAC,EAAA,EACAF,EAAA,SACAR,EAAAW,QAAAN,EAAA,SAAAO,EAAA9B,EAAAD,EAAAD,EAAAiC,GAaA,OAZAL,GAAAR,EAAAzC,MAAAmD,EAAAG,GAAAF,QAAAG,aAAAC,YACAL,EAAAG,EAAAD,EAAAI,OAEAlC,EACA0B,GAAA,cAAA1B,EAAA,iCACAD,EACA2B,GAAA,cAAA3B,EAAA,uBACAD,IACA4B,GAAA,OAAA5B,EAAA,YAIAgC,IAEAJ,GAAA,OAGAP,EAAAgB,WAAAT,EAAA,mBAAAA,EAAA,OAEAA,EAAA,4FAEAA,EAAA,gBAGA,IACAJ,EAAA,IAAAc,SAAAjB,EAAAgB,UAAA,MAAA,IAAAT,GACA,MAAAW,GAEA,MADAA,EAAAX,OAAAA,EACAW,EAGA,IAAApB,EAAA,SAAAqB,GACA,OAAAhB,EAAAnC,KAAAmB,KAAAgC,EAAAC,IAIAC,EAAArB,EAAAgB,UAAA,MAGA,OAFAlB,EAAAS,OAAA,YAAAc,EAAA,OAAAd,EAAA,IAEAT,OAyDA7C,EAAA,4BACA,WACA,SAAAqE,GACA,OAAAA,IAEArE,EAAA,uBAAA,4BAAA,SAAAsE,GAAA,OAAAA","file":"../skylark-langx-funcs.js","sourcesContent":["define('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n\r\n    function template(text, settings, oldSettings) {\r\n        if (!settings && oldSettings) settings = oldSettings;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n          index = offset + match.length;\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          } else if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          } else if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n\r\n          // Adobe VMs need the match returned to produce the correct offset.\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        var render;\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        var template = function(data) {\r\n          return render.call(this, data, _);\r\n        };\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\n"]}